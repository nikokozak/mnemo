version: 2.1

description: Build and test Mnemo

jobs:
  # Build and test mnemo imitating a dev enviroment
  Dev-Test:
    docker:
      - image: cimg/elixir:1.14.0-node
        #environment:
          #DATABASE_URL: postgres://postgres:postgres@localhost/mnemo
      - image: cimg/postgres:14.5
        environment:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: mnemo_test
    steps:
      - checkout
      - run: 
          name: "Install hex"
          command: mix local.hex --force
      - run:
          name: "Install rebar"
          command: mix local.rebar --force
      - run:
          name: "Install mix deps"
          command: |
            cd src/mnemo;
            mix deps.get;
      - run:
          name: "Install npm deps"
          command: |
            cd src/mnemo;
            npm install --prefix=./assets;
      - run:
          name: "Check eilixir formatting"
          command: |
            cd src/mnemo;
            mix format --check-formatted --dry-run;
      - run:
          name: "Run mix tests"
          command: |
            cd src/mnemo;
            MIX_ENV=test mix test;
  # Build and Test as release, including e2e
  Prod-Test:
    docker:
      - image: cimg/elixir:1.14.0-browsers
        environment:
          DATABASE_URL: postgres://postgres:postgres@localhost/mnemo
          MIX_ENV: prod
          SECRET_KEY_BASE: lM+qWJHQLhy+R2r9Adkc8DKZufLrcRE3Y0+rbE+TtgOlARdaahf+taOzrEGcBoLY
      - image: cimg/postgres:14.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mnemo
    steps:
      - checkout
      - run: 
          name: "Install hex"
          command: mix local.hex --force
      - run:
          name: "Install rebar"
          command: mix local.rebar --force
      - run:
          name: "Install mix deps"
          command: |
            cd src/mnemo;
            mix deps.get;
      - run:
          name: "Install npm deps (assets & playwright)"
          command: |
            cd src/mnemo;
            npm install;
            npm install --prefix=./assets;
            npx playwright install;
            npx playwright install-deps;
      - run:
          name: "Compile deps and assets"
          command: |
            cd src/mnemo;
            mix deps.compile;
            mix assets.deploy;
      - run:
          name: "Compile the release"
          command: |
            cd src/mnemo;
            mix compile;
      - run:
          name: "Make release"
          command: |
            cd src/mnemo;
            mix release;
      - run:
          name: "Migrate DB"
          command: |
            cd src/mnemo/_build/prod/rel/mnemo/bin/;
            ./migrate;
      - run:
          name: "Run server"
          command: |
            cd src/mnemo/_build/prod/rel/mnemo/bin/;
            ./server;
          background: true
      - run:
          name: "Run e2e tests"
          command: |
            cd src/mnemo;
            npx playwright test;
      - run:
          name: "Deploy to fly"
          command: |
                  - run:
          name: "Install flyctl for deployment"
          command: |
            export FLYCTL_INSTALL="/home/circleci/.fly";
            export PATH="$FLYCTL_INSTALL/bin:$PATH";
            curl -L https://fly.io/install.sh | sh;
            cd src/mnemo;
            flyctl deploy --remote-only -t $FLYCTL_TOKEN --now --verbose;

workflows:
  main:
    jobs:
      - Dev-Test
      - Prod-Test
